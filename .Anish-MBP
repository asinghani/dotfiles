
# brew config
export HOMEBREW_PREFIX="/opt/homebrew";
export HOMEBREW_CELLAR="/opt/homebrew/Cellar";
export HOMEBREW_REPOSITORY="/opt/homebrew";
export PATH="/opt/homebrew/bin:/opt/homebrew/sbin${PATH+:$PATH}";
export MANPATH="/opt/homebrew/share/man${MANPATH+:$MANPATH}:";
export INFOPATH="/opt/homebrew/share/info:${INFOPATH:-}";

# local config
export PATH="$HOME/workspace/oss-cad-suite/bin:$HOME/workspace/bin:$HOME/workspace/sejda-console/bin:/Users/anish/.local/bin:$PATH"
export GHIDRA_ROOT="$HOME/workspace/ghidra"
export RISCV=riscv-none-elf-

# node
export NVM_DIR="$HOME/.nvm"
[ -s "$NVM_DIR/nvm.sh" ] && \. "$NVM_DIR/nvm.sh"  # This loads nvm
[ -s "$NVM_DIR/bash_completion" ] && \. "$NVM_DIR/bash_completion"  # This loads nvm bash_completion

# xpm
XPACK_PATHS=$(find ~/Library/xPacks/@xpack-dev-tools -type d -name ".content" | while read line; do printf "${line}/bin:"; done)
export PATH="$PATH:$XPACK_PATHS"

# VSCode `code` command
export PATH="$PATH:/Applications/Visual Studio Code.app/Contents/Resources/app/bin"

# Conda setup
export PATH="$HOME/workspace/miniconda3/condabin:$PATH"

conda-init() {
    # >>> conda initialize >>>
    # !! Contents within this block are managed by 'conda init' !!
    __conda_setup="$('/Users/anish/workspace/miniconda3/bin/conda' 'shell.bash' 'hook' 2> /dev/null)"
    if [ $? -eq 0 ]; then
        eval "$__conda_setup"
    else
        if [ -f "/Users/anish/workspace/miniconda3/etc/profile.d/conda.sh" ]; then
            . "/Users/anish/workspace/miniconda3/etc/profile.d/conda.sh"
        else
            export PATH="/Users/anish/workspace/miniconda3/bin:$PATH"
        fi
    fi
    unset __conda_setup
    conda deactivate
    # <<< conda initialize <<<

    export PATH="$HOME/workspace/miniconda3/bin:$PATH"
    if [ "$1" ]; then
        conda activate $1
    else
        conda activate base
    fi
}

export BASH_SILENCE_DEPRECATION_WARNING=1

# RPi Pico
export PICO_SDK_PATH=/Users/anish/workspace/pico-sdk
export PICO_EXTRAS_PATH=/Users/anish/workspace/pico-extras
