# Termimal Aliases & Functions

# 1. Directory related commands
# ------------------------------------
cdl() { builtin cd "$@"; ll; }

# Various options for moving forward/back in directories
alias cd..="cd ../"
alias ..="cd ../"
alias ...="cd ../../"
alias .1="cd ../"
alias .2="cd ../../"
alias .3="cd ../../../"
alias .4="cd ../../../../"
alias .5="cd ../../../../../"
alias .6="cd ../../../../../../"

# Useful ls presets
alias la="ls -lah"
alias ll="ls -lh"
alias lal="la -lah"
alias l="ls"
alias sl="ls"

# Other directory commands
alias ~="cd ~"

alias path="realpath"

# ------------------------------------
# 2. File management
# ------------------------------------
trash () { mkdir -p ~/.Trash; command mv "$@" ~/.Trash; }
alias del="trash"

extract () {
    if [[ -f $1 ]] ; then
        case $1 in
            *.tar.bz2)   tar xjf $1     ;;
            *.tar.gz)    tar xzf $1     ;;
            *.bz2)       bunzip2 $1     ;;
            *.rar)       unrar e $1     ;;
            *.gz)        gunzip $1      ;;
            *.tar)       tar xf $1      ;;
            *.tbz2)      tar xjf $1     ;;
            *.tgz)       tar xzf $1     ;;
            *.zip)       unzip $1       ;;
            *.Z)         uncompress $1  ;;
            *.7z)        7z x $1        ;;
            *)     echo "'$1' cannot be extracted" ;;
        esac
    else
        echo "'$1' is not a valid file"
    fi
}

pdfmerge () {
    gs -q -dNOPAUSE -dBATCH -sDEVICE=pdfwrite -sOutputFile="$1" "${@:2}"
}

alias search="find. -name "
qf () { /usr/bin/find . -name "$@" ; }
alias quickfind="qf"
alias qfind="qf"

new () {
	touch $1 && open $1
}

# Run a command repeatedly
run_repeat () {
    while true
    do
        read -p "Press [ENTER] to run $1"
        $@
        printf "\n"
    done
}

alias viminstall="vim +PluginInstall +qall"

# ------------------------------------
# 3. Development
# ------------------------------------
alias kall='kill -9 %{1..105} 2&> /dev/null'

# tmux utf-8
alias tmux="tmux -u"
alias v="vim"

gh () {
    git clone git@github.com:$1/$2.git $3
}

# ------------------------------------
# 4. System Settings
# ------------------------------------
randMAC () {
	openssl rand -hex 6 | sed 's/\(..\)/\1:/g; s/.$//'
}

randstr () {
	openssl rand -hex $1 | head -c $1
}

randhex () {
	openssl rand -hex $1 | head -c $1
}

# ------------------------------------
# 5. Misc
# ------------------------------------

transfer() { if [ $# -eq 0 ]; then echo -e "No arguments specified. Usage:\necho transfer /tmp/test.md\ncat /tmp/test.md | transfer test.md"; return 1; fi
tmpfile=$( mktemp -t transferXXX ); if tty -s; then basefile=$(basename "$1" | sed -e 's/[^a-zA-Z0-9._-]/-/g'); curl --progress-bar --upload-file "$1" "https://transfer.sh/$basefile" >> $tmpfile; else curl --progress-bar --upload-file "-" "https://transfer.sh/$1" >> $tmpfile ; fi; cat $tmpfile; rm -f $tmpfile; }

# ------------------------------------
# 6. CMU-related
# ------------------------------------
toafs() {
    if [ "$#" -eq 0 ]; then
        echo "Too few parameters"
    fi

    if [ "$#" -eq 1 ]; then
        scp $1 $AFS_USER@$AFS_MACHINE:temp
    fi

    if [ "$#" -eq 2 ]; then
        scp $1 $AFS_USER@$AFS_MACHINE:$2
    fi
}

fromafs() {
    if [ "$#" -eq 0 ]; then
        echo "Too few parameters"
    fi

    if [ "$#" -eq 1 ]; then
        scp $AFS_USER@$AFS_MACHINE:$1 .
    fi

    if [ "$#" -eq 2 ]; then
        scp $AFS_USER@$AFS_MACHINE:$1 $2
    fi
}


# Useful tools for interacting with INI server
735-browser() {
	chromium --proxy-server="socks://localhost:8123" "http://192.168.2.98:8000/"
}

735-pwntools() {
	echo 'context.proxy = (socks.SOCKS5, "localhost", 8123)'
}

735-tunnel() {
	echo "Starting tunnel..."
    sshpass -p $(tail -n 1 $HOME/.735-creds) ssh -D 8123 -C -q -N -o ControlPersist=no $(head -n 1 $HOME/.735-creds)
}

735-nc() {
    nc -X 5 -x localhost:8123 $1 $2
}

735-curl() {
    curl --socks5-hostname localhost:8123 $1
}

735-dl() {
    curl -O --socks5-hostname localhost:8123 $1
}
